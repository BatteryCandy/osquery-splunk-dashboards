{
    "queries": {
        "apt_sources": {
            "description": "Display apt package manager sources.",
            "interval": 86400,
            "platform": "ubuntu",
            "query": "SELECT * FROM apt_sources;",
            "snapshot": true
        },
        "crontab_snapshot": {
            "description": "Retrieves all the jobs scheduled in crontab in the target system.",
            "interval": 86400,
            "query": "SELECT * FROM crontab;",
            "snapshot": true
        },
        "etc_hosts_snapshot": {
            "description": "Retrieves all the entries in the target system /etc/hosts file.",
            "interval": 86400,
            "query": "SELECT * FROM etc_hosts;",
            "snapshot": true
        },
        "kernel_info": {
            "description": "Retrieves information from the current kernel in the target system.",
            "interval": 86400,
            "query": "SELECT * FROM kernel_info;",
            "snapshot": true
        },
        "kernel_modules_snapshot": {
            "description": "Linux kernel modules both loaded and within the load search path.",
            "interval": 86400,
            "query": "SELECT * FROM kernel_modules;",
            "snapshot": true
        },
        "ld_preload": {
            "description": "Any processes that run with an LD_PRELOAD environment variable",
            "interval": 60,
            "query": "SELECT process_envs.pid, process_envs.key, process_envs.value, processes.name, processes.path, processes.cmdline, processes.cwd FROM process_envs join processes USING (pid) WHERE key = 'LD_PRELOAD';",
            "snapshot": true
        },
        "ld_so_preload_exists": {
            "description": "Generates an event if ld.so.preload is present - used by rootkits such as Jynx",
            "interval": 3600,
            "query": "SELECT * FROM file WHERE path='/etc/ld.so.preload' AND path!='';",
            "snapshot": true
        },
        "listening_ports": {
            "description": "Gather information about processes that are listening on a socket.",
            "interval": 86400,
            "query": "SELECT pid, port, processes.path, cmdline, cwd FROM listening_ports JOIN processes USING (pid) WHERE port!=0;",
            "snapshot": true
        },
        "network_interfaces_snapshot": {
            "description": "Record the network interfaces and their associated IP and MAC addresses",
            "interval": 600,
            "query": "SELECT a.interface, a.address, d.mac FROM interface_addresses a JOIN interface_details d USING (interface);",
            "snapshot": true
        },
        "os_version": {
            "description": "Retrieves information from the Operating System where osquery is currently running.",
            "interval": 86400,
            "query": "SELECT * FROM os_version;",
            "snapshot": true
        },
        "osquery_info": {
            "description": "Information about the running osquery configuration",
            "interval": 86400,
            "query": "SELECT * FROM osquery_info;",
            "snapshot": true
        },
        "system_info": {
            "description": "Information about the system hardware and name",
            "interval": 86400,
            "query": "SELECT * FROM system_info;",
            "snapshot": true
        },
        "users_snapshot": {
            "description": "Local system users.",
            "interval": 86400,
            "query": "SELECT * FROM users;",
            "snapshot": true
        }
    }
}