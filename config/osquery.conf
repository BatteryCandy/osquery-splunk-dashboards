{
    "decorators": {
      "load": [
        "SELECT account_id, ami_id, availability_zone, instance_id, instance_type, local_hostname, mac, region, security_groups, iam_arn from ec2_instance_metadata;"
      ]
    },
    "events": {
      "disable_subscribers": [
        "user_events"
      ]
    },
    "options": {
      "schedule_splay_percent": 10
    },
    "packs": {
      "fim": "/etc/osquery/packs/fim.conf",
      "snapshots": "/etc/osquery/packs/snapshots.conf",
      "user": "/etc/osquery/packs/user.conf"
    },
    "platform": "linux",
    "schedule": {
      "behavioral_reverse_shell": {
        "description": "Find shell processes that have open sockets",
        "interval": 600,
        "query": "SELECT DISTINCT(processes.pid), processes.parent, processes.name, processes.path, processes.cmdline, processes.cwd, processes.root, processes.uid, processes.gid, processes.start_time, process_open_sockets.remote_address, process_open_sockets.remote_port, (SELECT cmdline FROM processes AS parent_cmdline WHERE pid=processes.parent) AS parent_cmdline FROM processes JOIN process_open_sockets USING (pid) LEFT OUTER JOIN process_open_files ON processes.pid = process_open_files.pid WHERE (name='sh' OR name='bash') AND remote_address NOT IN ('0.0.0.0', '::', '') AND remote_address NOT LIKE '10.%' AND remote_address NOT LIKE '192.168.%';"
      },
      "crontab": {
        "description": "Retrieves all the jobs scheduled in crontab in the target system.",
        "interval": 3600,
        "query": "SELECT * FROM crontab;"
      },
      "deb_packages": {
        "description": "Display all installed DEB packages",
        "interval": 300,
        "platform": "ubuntu",
        "query": "SELECT * FROM deb_packages;"
      },
      "dns_resolvers": {
        "description": "DNS resolvers used by the host",
        "interval": 3600,
        "query": "SELECT * FROM dns_resolvers;"
      },
      "etc_hosts": {
        "description": "Retrieves all the entries in the target system /etc/hosts file.",
        "interval": 3600,
        "query": "SELECT * FROM etc_hosts;"
      },
      "heartbeat": {
        "description": "Simple heartbeat.",
        "interval": 60,
        "query": "select si.computer_name, up.total_seconds as uptime from system_info si, uptime up;",
        "removed": false
      },
      "iptables": {
        "description": "Retrieves the current filters and chains per filter in the target system.",
        "interval": 86400,
        "platform": "linux",
        "query": "SELECT * FROM iptables;"
      },
      "process_events": {
        "description": "Process events collected from the audit framework",
        "interval": 10,
        "query": "SELECT auid, cmdline, ctime, cwd, egid, euid, gid, parent, path, pid, time, uid FROM process_events WHERE path NOT IN ('/bin/sed', '/usr/bin/tr', '/bin/gawk', '/bin/date', '/bin/mktemp', '/usr/bin/dirname', '/usr/bin/head', '/usr/bin/jq', '/bin/cut', '/bin/uname', '/bin/basename') and cmdline NOT LIKE '%_key%' AND cmdline NOT LIKE '%secret%';"
      },
      "socket_events": {
        "description": "Socket events collected from the audit framework",
        "interval": 10,
        "query": "SELECT action, auid, family, local_address, local_port, path, pid, remote_address, remote_port, time FROM socket_events WHERE success=1 AND path NOT IN ('/usr/bin/hostname') AND remote_address NOT IN ('127.0.0.1', '169.254.169.254', '', '0000:0000:0000:0000:0000:0000:0000:0001', '::1', '0000:0000:0000:0000:0000:ffff:7f00:0001', 'unknown', '0.0.0.0', '0000:0000:0000:0000:0000:0000:0000:0000');"
      },
      "suid_bin": {
        "description": "Display any SUID binaries that are owned by root",
        "interval": 86400,
        "query": "SELECT * FROM suid_bin;"
      },
      "usb_devices": {
        "description": "Prove to auditors that our aws servers have no USB plugged in.",
        "interval": 120,
        "query": "SELECT * FROM usb_devices;"
      }
    }
  }